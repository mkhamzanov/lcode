# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1 is None and l2 is None:
            return None
        
        s1 = 0
        while l1 is not None:
            s1 = s1*10 + l1.val
            l1 = l1.next
            
        s2 = 0
        while l2 is not None:
            s2 = s2*10 + l2.val
            l2 = l2.next
        
        s3 = s1+s2
        
        head = ListNode(None)
        cur = head
        for s in str(s3):
            cur.next = ListNode(s)
            cur = cur.next
        return head.next