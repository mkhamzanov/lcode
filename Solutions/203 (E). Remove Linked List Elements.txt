# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        if head is None:
            return None
        
        # Check if first value of list is equal to val
        while head.val==val and head.next is not None:
            head=head.next
        
        dummy = ListNode(0)
        dummy.next = head
        cur = dummy.next
        prev = dummy
        while cur is not None:
            if cur.val==val:
                if cur.next is None:
                    prev.next = None
                    return dummy.next
                cur = cur.next
            else:
                prev.next = cur
                cur = cur.next
                prev = prev.next
        return dummy.next