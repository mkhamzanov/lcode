61. Rotate List
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        if head is None:
            return head
        
        dummy = head
        array = []
        while dummy is not None:
            array.append(dummy.val)
            dummy = dummy.next
        k = k%len(array)
        array[:] = array[-k:] + array[:-k]
        tmp = head
        for i in range(len(array)):
            tmp.val = array[i]
            tmp = tmp.next
        return head